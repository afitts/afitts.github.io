<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Alex Fitts</title><link href="http://localhost:8000/" rel="alternate"></link><link href="http://localhost:8000/feeds/tag/pelican-tutorial-travis-github.atom.xml" rel="self"></link><id>http://localhost:8000/</id><updated>2015-03-26T00:00:00-05:00</updated><entry><title>Using Travis &amp; GitHub to deploy static sites</title><link href="http://localhost:8000/2015/03/26/static-site-deployments/" rel="alternate"></link><published>2015-03-26T00:00:00-05:00</published><author><name>Alex Fitts</name></author><id>tag:localhost:8000,2015-03-26:2015/03/26/static-site-deployments/</id><summary type="html">&lt;p&gt;I’m an unabashed supporter of “Keep It Simple, Stupid” solutions - it’s the reason I use &lt;a href="http://docs.getpelican.com/en/3.5.0/"&gt;Pelican&lt;/a&gt; for this website and host it on &lt;a href="http://aws.amazon.com/s3/"&gt;S3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, I haven’t been completely satisfied with the process of writing a new post or making changes to &lt;a href="https://github.com/gjreda/void"&gt;my theme&lt;/a&gt;. It’s felt repetitive - make a change, generate site, check change, regenerate site, and eventually push to S3. Due to the extra steps of generating and pushing, I never felt able to focus on just the change at hand.&lt;/p&gt;
&lt;p&gt;I wanted to focus, but also maintain the flexibility of a static site.&lt;/p&gt;
&lt;p&gt;Enter &lt;a href="https://travis-ci.org"&gt;TravisCI&lt;/a&gt;. Travis is a &lt;a href="http://en.wikipedia.org/wiki/Continuous_integration"&gt;continuous integration&lt;/a&gt; (CI) service hosted at GitHub. Setup a &lt;code&gt;.travis.yml&lt;/code&gt; file, check your code into GitHub, and Travis will build the project based on the steps laid out in your &lt;code&gt;.travis.yml&lt;/code&gt;. A common use-case of CI is automatically running a test suite against each new commit to make sure a change didn’t break functionality of the app.&lt;/p&gt;
&lt;p&gt;Since Pelican is just a Python application, and Travis has S3 integration, I’m now using it to regenerate and deploy my site every time I push a change to it on GitHub.&lt;/p&gt;
&lt;p&gt;If you’re using Pelican (or any other static site generator) and hosting on S3, here’s how to set things up.&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;First, sign up for Travis - you’ll just need to login with your GitHub account. Travis will then sync with your GitHub repos. Turn on the GitHub repo(s) you’ll be using it with. For me, it’s just my website.&lt;/p&gt;
&lt;p&gt;&lt;img alt="travis-enabled-repo" src="/images/travis-enabled-repo.png" /&gt;&lt;/p&gt;
&lt;p&gt;Next, create a new &lt;a href="http://aws.amazon.com/iam/"&gt;Identity &amp;amp; Access Management&lt;/a&gt; (IAM) user on AWS for Travis. Make note of the security credentials - the Access Key ID and Secret Access Key. You’ll need these later.&lt;/p&gt;
&lt;p&gt;Also, since this user will need to write files to S3, make sure it has the &lt;em&gt;AmazonS3FullAccess&lt;/em&gt; policy. To do so, click on your new user in the IAM dashboard, click “Attach Policy” (in the Managed Policies section), select &lt;em&gt;AmazonS3FullAccess&lt;/em&gt;, and attach. Done.&lt;/p&gt;
&lt;p&gt;&lt;img alt="attach-s3-policy" src="/images/attach-s3-policy.png" /&gt;&lt;/p&gt;
&lt;p&gt;Now, you’ll need to add your AWS Access Key ID and Secret Access Key to your repo’s environment variables in Travis. These are needed in order to write your site’s files to S3.&lt;/p&gt;
&lt;p&gt;&lt;img alt="travis-environment-variables" src="/images/travis-env-variables.png" /&gt;&lt;/p&gt;
&lt;p&gt;Lastly, you’ll need to add a &lt;code&gt;.travis.yml&lt;/code&gt; file to the root of your project. This tells Travis how to build the application (in this case, a static site generator). Here’s what &lt;a href="https://github.com/gjreda/gregreda.com/blob/master/.travis.yml"&gt;mine&lt;/a&gt; looks like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2.7&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;
&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sudo apt-get install pandoc&amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pip install -r requirements.txt&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pelican content/&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;provider&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;
    &lt;span class="n"&gt;access_key_id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;$AWS_ACCESS_KEY&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;declared&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Travis&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
    &lt;span class="n"&gt;secret_access_key&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;$AWS_SECRET_KEY&lt;/span&gt;
    &lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gregreda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;
    &lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gregreda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;s3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;us&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;east&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;amazonaws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;
    &lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;us&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;east&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;skip_cleanup&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;
    &lt;span class="n"&gt;acl&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;public_read&lt;/span&gt;
    &lt;span class="n"&gt;detect_encoding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;notifications&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;on_failure&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;always&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here’s a quick rundown:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;language&lt;/code&gt; - The language in which the application is written. Since we’re using Pelican, it’s Python, but Travis supports a variety of languages. We also specify a version on the next line.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;install&lt;/code&gt; - This tells Travis any dependencies that need to be installed via apt-get. Some of my posts have IPython Notebook integration, which uses &lt;a href="http://johnmacfarlane.net/pandoc/"&gt;pandoc&lt;/a&gt;. I’m also using pip to install the required Python packages (like Pelican).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;script&lt;/code&gt; - Your build command. In this case, it’s just &lt;code&gt;pelican content&lt;/code&gt;, which generates the static site based off of what’s in the content directory. By default, Pelican writes the site to a local directory called &lt;code&gt;output&lt;/code&gt;, which we need in the deploy step.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;deploy&lt;/code&gt; - Since Travis has &lt;a href="http://docs.travis-ci.com/user/deployment/s3/"&gt;S3 deployment&lt;/a&gt; built-in, all we need to do is tell it which directory (&lt;code&gt;local-dir&lt;/code&gt;) to put where (your &lt;code&gt;bucket&lt;/code&gt; and its related &lt;code&gt;endpoint&lt;/code&gt; and &lt;code&gt;region&lt;/code&gt;). Note that we’re also using our AWS keys - the variable names used here must match the names we provided in the environment variables section earlier.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;notifications&lt;/code&gt; - By default, Travis will email you the results of each build. I’ve turned them off, but there are other &lt;a href="http://docs.travis-ci.com/user/notifications/"&gt;notification options&lt;/a&gt; as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above is really just a subset of the functionality Travis provides - you can even declare scripts to be run before and after install, or before and after your deploy. Check out the &lt;a href="http://docs.travis-ci.com/user/build-configuration/"&gt;build configuration&lt;/a&gt; section of the docs if you’re interested in learning more.&lt;/p&gt;
&lt;p&gt;Now, every time I push a commit to GitHub, Travis will clone my repo, &lt;code&gt;cd&lt;/code&gt; to it, build, and deploy my site all based on what’s in my &lt;code&gt;.travis.yml&lt;/code&gt; file. And I get to focus on writing.&lt;/p&gt;
&lt;p&gt;Have questions? &lt;a href="https://twitter.com/gjreda"&gt;Let me know&lt;/a&gt;.&lt;/p&gt;</summary><category term="pelican tutorial travis github"></category></entry></feed>